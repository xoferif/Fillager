@using Microsoft.Extensions.Primitives
@model Fillager.ViewModels.FileListViewModel
@{
    ViewData["Title"] = "Your Files";
}

<div class="page-header">
    <h3>Your Files</h3>
    <hr />
    <div id="errorbox" style="display: none" class="alert alert-danger">
                
    </div>

    <div class="panel-group">
        <div class="panel panel-primary">
            <div class="panel-heading">Upload Files</div>
            <div class="panel-group">
                @await Component.InvokeAsync("FileUploadZone", "UploadPrivateFiles")
                <div class="progress">

                    <div class="bar progress-bar progress-bar-info progress-bar-striped" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                        <div class="percent">0%</div>
                    </div>
                </div>
            </div>
        </div>

        <form asp-action="" asp-controller="Fillager" method="post">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#privateFileList">Your Files</a>
                        @if (Model.ShowDiskUsedPctMarker)
                        {
                            <span class="label label-warning">@Model.DiskUsedPct %</span>
                        }
                        <span class="pull-right">
                            <input type="submit" class="btn-info" value="Download" id="DownloadMultiple" />
                            <input type="submit" class="btn-info" value="Delete" formaction="DeleteFiles" />
                            <input type="checkbox" class="check" id="checkAll">
                        </span>
                    </h4>
                </div>
                <div id="privateFileList" class="panel-collapse collapse in">
                    @await Component.InvokeAsync("FileList", Model)
                </div>
            </div>
        </form>
    </div>
</div>

<div id="modal-container" class="modal fade hidden-print" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">

        </div>
    </div>
</div>


<!--hover effect-->
<style>
    .hoverable:hover {
        background-color: #ecf0f1;
    }

    input [type=checkbox] {
        -moz-transform: scale(2); /* FF */
        /* Double-sized Checkboxes */
        -ms-transform: scale(2); /* IE */
        -o-transform: scale(2); /* Opera */
        -webkit-transform: scale(1.75); /* Safari and Chrome */
        margin-left: 10px;
    }
</style>

<!--copy link from list-->
@section Scripts
{
    <script src="https://cdn.jsdelivr.net/clipboard.js/1.5.16/clipboard.min.js"></script>
    <script>
        new Clipboard('.copyBtn');
    </script>

    <!--on modal close clear the data in it to prevent caching its content-->
    <script>
        $(function() {
            // when the modal is closed
            $('#modal-container').on('hidden.bs.modal',
                function() {
                    // remove the bs.modal data attribute from it
                    $(this).removeData('bs.modal');
                    // and empty the modal-content element
                    $('#modal-container .modal-content').empty();
                });
        });
    </script>

    <!--simple dropzone with progress bar-->
    <script src="http://malsup.github.com/jquery.form.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/4.3.0/min/dropzone.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/4.3.0/min/dropzone.min.css"/>
    <script>
        var dropZone = document.getElementById('drop-zone');
        var uploadForm = document.getElementById('js-upload-form');
        var __RequestVerificationToken = uploadForm.elements["__RequestVerificationToken"].value;

        var bar = $('.bar');
        var percent = $('.percent');


        $('#js-upload-form').ajaxForm({
            beforeSend: function() {
                var percentVal = '0%';
                bar.width(percentVal);
                percent.html(percentVal);
            },
            uploadProgress: function(event, position, total, percentComplete) {
                var percentVal = percentComplete + '%';
                bar.width(percentVal);
                percent.html(percentVal);
            },
            success: function() {
                var percentVal = '100%';
                bar.width(percentVal);
                percent.html(percentVal);
            },
            complete: function (xhr) {
                if (xhr != null && xhr.responseJSON && xhr.responseJSON.error) {
                    error = xhr.responseJSON.error;
                    $("#errorbox").css("display", "block");
                    $("#errorbox").html(xhr.responseJSON.error);
                } else {
                    location.reload();
                }
            }
        });

        var myDropzone = new Dropzone("#drop-zone",
        {
            url: uploadForm.action,
            maxFilesize: 250,
            paramName: 'files',
            previewTemplate: '<div></div>',
            addRemoveLinks: false
        });

        myDropzone.on('sending',
            function(file, xhr, formData) {
                formData.append("__RequestVerificationToken", __RequestVerificationToken);
            }
        );

        myDropzone.on("totaluploadprogress",
            function(totalPercentage, totalBytesToBeSent, totalBytesSent) {
                var bar = $('.bar');
                var percent = $('.percent');
                var percentVal = totalPercentage + '%';
                bar.width(percentVal);
                percent.html(Math.floor(totalPercentage) + '%');
            });
        var error = null;
        myDropzone.on("success",
            function(file, responseText) {
                if (responseText != null && responseText.error != null) {
                    error = responseText.error;
                    $("#errorbox").css("display", "block");
                    $("#errorbox").html(responseText.error);
                }
            });
        myDropzone.on("queuecomplete",
            function() {
                $('.bar').width(0);
                if (!error) {
                    location.reload();
                }
            });


    </script>

    <!--multi download select all checkbox-->
    <script>
        $("#checkAll").click(function() {
            $(".check").prop('checked', $(this).prop('checked'));
        });
    </script>

    <!--multi download feature-->
    <script>
        $("#DownloadMultiple").click(function(e) {
            e.preventDefault();
            var someVar = $(".check:checked");

            someVar.each(function(key, value) {
                var fileId = value.value;
                var fileAnchor = $("#file-dl-" + fileId);
                if (fileAnchor != null && fileAnchor[0] != null) {
                    fileAnchor[0].click();
                }
            });
        });
    </script>
}